// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Sys.jack

/**
 * A library that supports various program execution services.
 */
class Sys {

    /** Performs all the initializations required by the OS. */
    function void init() {
        // Initialize all OS components in the correct order
        do Memory.init();     // Initialize memory first
        do Math.init();       // Initialize math functions
        do Screen.init();     // Initialize screen
        do Output.init();     // Initialize output
        do Keyboard.init();   // Initialize keyboard
        
        do Main.main();       // Start the program
        do Sys.halt();        // Halt when main returns
        return;
    }

    /** Halts the program execution. */
    function void halt() {
        while (true) {}      // Infinite loop
        return;
    }

    /** Waits approximately duration milliseconds and returns.  */
    function void wait(int duration) {
        var int i, j;
        
        // Validate duration
        if (duration < 0) {
            do Sys.error(1);  // Illegal wait time
        }
        
        // Nested loops to create delay
        // The exact numbers are calibrated for the specific hardware
        let i = 0;
        while (i < duration) {
            let j = 0;
            while (j < 200) {  // This number might need adjustment
                let j = j + 1;
            }
            let i = i + 1;
        }
        return;
    }

    /** Displays the given error code in the form "ERR<errorCode>",
     *  and halts the program's execution. */
    function void error(int errorCode) {
        var String s;
        
        // Print error message
        let s = String.new(4);
        do s.appendChar(69);  // E
        do s.appendChar(82);  // R
        do s.appendChar(82);  // R
        do Output.printString(s);
        do s.dispose();
        
        // Print error code
        do Output.printInt(errorCode);
        
        // Halt execution
        do Sys.halt();
        return;
    }
}
